package com.scm.servicio.sac;

import java.util.List;

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import com.scm.modelo.sac.SacUsuarioReferido;



@Stateless
public class ServicioSacReferido { 
	@PersistenceContext
	private EntityManager em;
	
	public void create(SacUsuarioReferido sacUsuarioReferido) {
		em.persist(sacUsuarioReferido);
	}
	
	public void delete (SacUsuarioReferido sacUsuarioReferido) {
		em.remove(em.merge(sacUsuarioReferido));
	}
	
	public void update (SacUsuarioReferido sacUsuarioReferido) {
		em.merge(sacUsuarioReferido);
	}
	
	@SuppressWarnings("unchecked") // Busca todo de la tabla sac_usuario_referido
	public List<SacUsuarioReferido> findAll() {
		Query q = em.createQuery("select b from SacUsuarioReferido b");
		return q.getResultList();
	}
	// Llama al numero mayor del campo numeroticket de la tabla sac_usuario_referido y le suma 1
	public Integer getNumeroTicket() {
		Integer codigo = 0;
		Query q = em.createQuery("select max(s.numeroticket) from SacUsuarioReferido s");
		codigo = (Integer) q.getSingleResult();
		if(codigo == null){
			codigo = 1;
		}else{
			codigo++;
		}
		return codigo;
	}
	
	public Integer getPK() {//Busca la primary key mas alta de la tabla sac_usuario_referido y se le suma 1
		Integer codigo = 0;
		Query q = em.createQuery("select max(id) from SacUsuarioReferido ");
		codigo = (Integer) q.getSingleResult();
		if(codigo == null){
			codigo = 1;
		}else{
			codigo++;
		}
		return codigo;
	}
	
	//Selecciona todo de la tabla sac_usuario_referido donde el id de la primary key sea igual a la del id seleccionado
	public SacUsuarioReferido findOne(Integer codigoSacReferido){
		Query q = em.createQuery("select b from SacUsuarioReferido b where b.idreferido = " + codigoSacReferido);
		return (SacUsuarioReferido) q.getSingleResult();
	}
	
	public List<SacUsuarioReferido> pornombresemejante(String nombre) {
		return em.createQuery("select b from SacUsuarioReferido b where b.nombre like :nombre", SacUsuarioReferido.class)
				.setParameter("nombre", "%" + nombre + "%")
				.getResultList();
	}
	
}

