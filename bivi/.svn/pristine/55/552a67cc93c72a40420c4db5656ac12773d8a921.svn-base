package com.scm.servicio.centroefectivo;

import java.util.List;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import com.scm.modelo.centroefectivo.CeNacionalidadEspecie;


@Stateless
public class ServicioCeNacionalidadEspecie {
	@PersistenceContext
	private EntityManager em;

	public void create(CeNacionalidadEspecie cenacionalidadespecie) {
		em.persist(cenacionalidadespecie);
	}

	public void delete(CeNacionalidadEspecie cenacionalidadespecie) {
		em.remove(em.merge(cenacionalidadespecie));
	}

	public void update(CeNacionalidadEspecie cenacionalidadespecie) {

		em.merge(cenacionalidadespecie);
	}

	// Selecciona todos los datos de la tabla CeNacionalidadEspecie
	@SuppressWarnings("unchecked")
	public List<CeNacionalidadEspecie> findAll() {
		Query q = em.createQuery("select r from CeNacionalidadEspecie r ");
		return q.getResultList();
	}

	// Busca la pk mas alta y le suma uno
	public Integer getPK() {
		Integer codigo = 0;
		Query q = em.createQuery("select max(id) from CeNacionalidadEspecie ");
		codigo = (Integer) q.getSingleResult();
		if (codigo == null) {
			codigo = 1;
		} else {
			codigo++;
		}
		return codigo;
	}

	// Busca el id seleccionado
	public CeNacionalidadEspecie findOne(Integer cenacionalidadespecie) {
		Query q = em.createQuery(
				"select f from CeNacionalidadEspecie f where f.idNacionalidadEspecie = " + cenacionalidadespecie);
		return (CeNacionalidadEspecie) q.getSingleResult();
	}
}
